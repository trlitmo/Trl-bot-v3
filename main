"""–∏–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
–ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –Ω—É–∂–Ω–æ –Ω–∞–±—Ä–∞—Ç—å pip install aiogram
"""

import random
import logging
from  aiogram import Bot,Dispatcher, executor,types
import aiogram.utils.markdown as fmt

TOKEN =  #here main token
#–ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–∞—Ç—å —Å –±–æ—Ç–æ–º
logging.basicConfig(level=logging.INFO)

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã–π—Ç–∏–π
bot = Bot(token = TOKEN)
dp = Dispatcher(bot)

#–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

ans_1 = "/start"
ans_12 ="start"
ans_2 = "–£—Ä–æ–≤–Ω–∏ TRL‚ùì"
ans_levels = """–°—É—â–µ—Å—Ç–≤—É–µ—Ç 9 —É—Ä–æ–≤–Ω–µ–π:\n
    TRL1 - –§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è\n
    TRL2 - –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –¥–ª—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –æ—Å—É—â–µ—Å—Ç–≤–∏–º–æ—Å—Ç–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π\n
    TRL3 - –≠–∫—Å–ø–µ—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –∏–ª–∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏\n
    TRL4 - –ö–æ–Ω—Ü–µ–ø—Ü–∏—è –ø–æ—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –≤ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏\n
    TRL5 - –ö–æ–Ω—Ü–µ–ø—Ü–∏—è –ø–æ—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—Ä–µ–¥–µ\n
    TRL6 - –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞/–º–æ–¥–µ–ª–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏\n
    TRL7 - –ü—Ä–æ—Ç–æ—Ç–∏–ø/–º–æ–¥–µ–ª—å –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—Ä–µ–¥–µ\n
    TRL8 - –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∏ –æ–ø—Ä–æ–±–æ–≤–∞–Ω–∞ –Ω–∞ –∏—Å–ø—ã—Ç–∞–Ω–∏—è—Ö\n
    TRL9 - –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é\n"""
ans_3 = "–°—Å—ã–ª–∫–∞ –Ω–∞ –ì–û–°–¢"
ans_link ="https://docs.cntd.ru/document/1200132491"
ans_4 = "–ü–æ–º–æ—â—å/–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"
ans_instructions = """- –ß—Ç–æ–±—ã –æ—Ü–µ–Ω–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –Ω–∞–∂–º–∏—Ç–µ: "–û—Ü–µ–Ω–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å TRL"\n
- –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —É—Ä–æ–≤–Ω—è—Ö –≥–æ–≤–Ω–æ—Å—Ç–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –Ω–∞–∂–º–∏—Ç–µ "–£—Ä–æ–≤–Ω–∏ TRL‚ùì"\n
- –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ì–û–°–¢ –ø–æ —É—Ä–æ–≤–Ω—è–º –≥–æ–≤–Ω–æ—Å—Ç–∏ –Ω–∞–∂–º–∏—Ç–µ "–°—Å—ã–ª–∫–∞ –Ω–∞ –ì–û–°–¢"\n"""
ans_5 = "–û—Ü–µ–Ω–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å TRL"
ans_6 = "–ë—ã–ª–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω—ã –∏—Å–ø—ã—Ç–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏, —Å–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –∞–∫—Ç—ã –∏—Å–ø—ã—Ç–∞–Ω–∏–π –∏ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã?"
ans_61 ="–î–∞"
ans_62 ="–ù–µ—Ç"
#####################
#–≤–µ—Ç–∫–∞ –î–∞ –≥–ª–∞–≤–Ω–∞—è -7
ans_7 = "–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è, –Ω–∞ –æ—Å–Ω–æ–≤–µ, –∫–æ—Ç–æ—Ä–æ–π —Å–æ–∑–¥–∞–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:" \
        "–º–∞—Ä—à—Ä—É—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ/—Å–±–æ—Ä–∫—É –¥–µ—Ç–∞–ª–µ–π, —É–∑–ª–æ–≤, –ø—Ä–∏–±–æ—Ä–∞?"
ans_71 ="–ï—Å—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã"
ans_72 ="–ù–µ—Ç/—á–∞—Å—Ç–∏—á–Ω–æ –µ—Å—Ç—å" #TRL6
ans_TRL6 = "TRL 6: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å/—É—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å " \
           "—Å–æ–≥–ª–∞—Å–Ω–æ –¥–∞–Ω–Ω—ã–º –æ TRL, –ø–æ–¥—Ä–æ–±–Ω–µ–µ –∑–¥–µ—Å—å: –ì–û–°–¢ https://docs.cntd.ru/document/1200132491. –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ TRL_ITMO!"
#–≤–µ—Ç–∫–∞ –î–∞ -8
ans_8 = "–ü—Ä–∏—Å–≤–æ–µ–Ω –ª–∏ –ª–∏—Ç–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏?"
ans_81 = "–µ—Å—Ç—å –ª–∏—Ç–µ—Ä" #TRL 8-9
ans_TRL89 = "TRL 8-9: –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–º—É –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é –≤ –º–µ–ª–∫–æ—Å–µ—Ä–∏–π–Ω–æ–º/—Å–µ—Ä–∏–π–Ω–æ–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ\n" \
            "–°—Å—ã–ª–∫–∞ –Ω–∞ –ì–û–°–¢ https://docs.cntd.ru/document/1200132491 . –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ TRL_ITMO!"
ans_82 ="–Ω–µ—Ç –ª–∏—Ç–µ—Ä–∞" #TRL 7
ans_TRL7 = "TRL 7: –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è –Ω–µ –≥–æ—Ç–æ–≤–∞ –∫ —Å–µ—Ä–∏–π–Ω–æ–º—É/–º–µ–ª–æ–∫–æ—Å–µ—Ä–∏–π–Ω–æ–º—É –ø—Ä–æ–π–∑–≤–æ–¥—Å—Ç–≤—É, –æ–¥–Ω–∞–∫–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏–≥–æ–¥–Ω–∞" \
           " –¥–ª—è –µ–¥–∏–Ω–∏—á–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–µ–ª—å–Ω–æ—Å—Ç–∏ –ö–î –∏ –¢–î).\n" \
           "–°—Å—ã–ª–∫–∞ –Ω–∞ –ì–û–°–¢ https://docs.cntd.ru/document/1200132491 . –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ TRL_ITMO!"
#####################
#–≤–µ—Ç–∫–∞ –ù–µ—Ç –≥–ª–∞–≤–Ω–∞—è - 9
ans_9 ="–ë—ã–ª–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω—ã –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–∞ —ç—Å–∫–∏–∑–Ω–∞—è" \
       " –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è?"
ans_91 ="–î–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ" #TRL 5
ans_TRL5 = "TRL 5: –î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å " \
           "–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è (–ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª—ã, –∞–∫—Ç—ã –∏—Å–ø—ã—Ç–∞–Ω–∏–π, –∑–∞–∫–ª—é—á–µ–Ω–∏–µ), –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ " \
           "–ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –º–µ—Ç–æ–¥–∏–∫—É –∏ –ø—Ä–æ–≥—Ä–∞–º–º—É –∏—Å–ø—ã—Ç–∞–Ω–∏–π.\n" \
           "–°—Å—ã–ª–∫–∞ –Ω–∞ –ì–û–°–¢ https://docs.cntd.ru/document/1200132491 . –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ TRL_ITMO!"
ans_92 ="–ù–µ—Ç, –ø–æ–∫–∞ –Ω–µ—Ç."
#–≤–µ—Ç–∫–∞ –Ω–µ—Ç –ø–æ–∫–∞ –Ω–µ—Ç
ans_10 ="–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω—ã –º–∞–∫–µ—Ç—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–∏—Å—Ç–µ–º,–≤—ã–ø–æ–ª–Ω–µ–Ω—ã –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã" \
        " –∏ –∏—Å–ø—ã—Ç–∞–Ω–∏—è —Ä–æ–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏?"
ans_101 ="–î–∞, —Ç–∞–∫ –∏ –µ—Å—Ç—å"#trl 4
ans_TRL4 = "TRL4: –î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –≠–ö–î (–≠—Å–∫–∏–∑–Ω—É—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—Å–∫—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é), –ø—Ä–æ—Ç–æ—Ç–∏–ø –∏–∑–¥–µ–ª–∏—è/–º–∞–∫–µ—Ç—ã –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö\n" \
           "–°—Å—ã–ª–∫–∞ –Ω–∞ –ì–û–°–¢ https://docs.cntd.ru/document/1200132491 . –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ TRL_ITMO!"
ans_102 = "–ù–µ—Ç,—Ç–æ–ª—å–∫–æ —Ä–∞—Å—á–µ—Ç—ã"#trl 3
ans_TRL3 = "TRL3: –î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ —Å –ø–æ–º–æ—â—å—é –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π, –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–∏–º—É–ª—è—Ü–∏–π, –ø—Ä–æ—á–Ω–æ—Å—Ç–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤, –∞ —Ç–∞–∫–∂–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏" \
           " —É—Ç–æ—á–Ω–µ–Ω—ã–π —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç." \
           "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–æ–±–Ω—ã–µ –º–∞–∫–µ—Ç—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–∏—Å—Ç–µ–º \n" \
"–°—Å—ã–ª–∫–∞ –Ω–∞ –ì–û–°–¢ https://docs.cntd.ru/document/1200132491 . –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ TRL_ITMO! "
ans_103 = "–ù–µ—Ç, —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ü–µ–ø—Ü–∏—è"#trl 1-2
ans_TRL12 = "TRL1-2: –î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ —Å –ø–æ–º–æ—â—å—é –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π. –¢–∞–∫–∂–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç \n" \
"–°—Å—ã–ª–∫–∞ –Ω–∞ –ì–û–°–¢ https://docs.cntd.ru/document/1200132491 . –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ TRL_ITMO! "
# —Å–æ–±–µ—Ä–µ–º –≤—Å–µ –≤ —Å–ø–∏—Å–æ–∫
ans =[ans_1,ans_2,ans_3,ans_4,ans_5,ans_6,ans_61,ans_62,
      ans_7,ans_71,ans_72,ans_8,ans_81,ans_82,ans_9,ans_91,
      ans_92,ans_10,ans_101,ans_102,ans_103]
#–æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å—Ç–∏–∫–µ—Ä—ã
ans_stickers1 = "–•–æ—Ä–æ—à–∏–π —Å—Ç–∏–∫–µ—Ä ü¶æ, –Ω–∞–≤–µ—Ä–Ω–æ–µ"
ans_stickers2 = "–Ø –Ω–µ –º–æ–≥—É –ø–æ–Ω—è—Ç—å,—á—Ç–æ —ç—Ç–æ..."
ans_stickers3 = "–í –º–∏—Ä–µ —Ä–æ–±–æ—Ç–æ–≤ –Ω–µ—Ç —Å—Ç–∏–∫–µ—Ä–æ–≤, –±–æ—Å—Å"
ans_stickers4 = "–Ø –Ω–µ –º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å —ç—Ç—É –∫–∞—Ä—Ç–∏–Ω–∫—É"
ans_stickers = [ans_stickers1,ans_stickers2,ans_stickers3,ans_stickers4]
#–ö–Ω–æ–ø–∫–∞ –≤–µ—Ä–Ω—É—Ç—å—Å—è
ans_back ="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é üîô"

@dp.message_handler(lambda message: message.text == (ans_1))
async def main(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text=ans_5)
    keyboard.add(button_1)
    button_2 = types.KeyboardButton(text=ans_2)
    keyboard.add(button_2)
    button_3 = types.KeyboardButton(text=ans_3)
    keyboard.add(button_3)
    button_4 = types.KeyboardButton(text=ans_4)
    keyboard.add(button_4)
    await message.answer('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ,'+message.from_user.first_name+', –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == ans_2)
async def TRL_level(message: types.Message):
    await message.answer(ans_levels)

@dp.message_handler(lambda message: message.text == ans_3)
async def link(message: types.Message):
    await message.answer("https://docs.cntd.ru/document/1200132491")

@dp.message_handler(lambda message: message.text == ans_4)
async def instructions(message: types.Message):
    await message.answer(ans_instructions)

###### –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.

@dp.message_handler(lambda message: message.text == ans_5)
async def yes1(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text=ans_61)
    keyboard.add(button_1)
    button_2 = types.KeyboardButton(text=ans_62)
    keyboard.add(button_2)
    button_3 = types.KeyboardButton(text=ans_back)
    keyboard.add(button_3)
    await message.answer(ans_6, reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == ans_61) #–∏–¥–µ–º –ø–æ –≤–µ—Ç–∫–µ –¥–∞
async def yes2(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text=ans_71)
    keyboard.add(button_1)
    button_2 = types.KeyboardButton(text=ans_72)
    keyboard.add(button_2)
    button_3 = types.KeyboardButton(text=ans_back)
    keyboard.add(button_3)
    await message.answer(ans_7, reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == ans_71) #–∏–¥–µ–º –ø–æ –≤–µ—Ç–∫–µ –¥–∞
async def yes3(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text=ans_81)
    keyboard.add(button_1)
    button_2 = types.KeyboardButton(text=ans_82)
    keyboard.add(button_2)
    button_3 = types.KeyboardButton(text=ans_back)
    keyboard.add(button_3)
    await message.answer(ans_8, reply_markup= keyboard)

@dp.message_handler(lambda message: message.text == ans_81) #–∏–¥–µ–º –ø–æ –≤–µ—Ç–∫–µ –¥–∞
async def trl89(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_3 = types.KeyboardButton(text=ans_back)
    keyboard.add(button_3)
    await message.answer(ans_TRL89, reply_markup=keyboard)

### —Ç–µ–ø–µ—Ä—å –∏–¥–µ–º —Å –∫–æ–Ω—Ü–∞ –ø–µ—Ä–≤–æ–π –≤–µ—Ç–∫–∏
@dp.message_handler(lambda message: message.text == ans_82) #–∏–¥–µ–º –ø–æ –≤–µ—Ç–∫–µ –Ω–µ—Ç
async def trl7(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_3 = types.KeyboardButton(text=ans_back)
    keyboard.add(button_3)
    await message.answer(ans_TRL7, reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == ans_72) #–∏–¥–µ–º –ø–æ –≤–µ—Ç–∫–µ –Ω–µ—Ç
async def trl6(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_3 = types.KeyboardButton(text=ans_back)
    keyboard.add(button_3)
    await message.answer(ans_TRL6, reply_markup=keyboard)
###_________________________________ ##
# –ì–ª–∞–≤–Ω–∞—è –≤–µ—Ç–≤—å –ù–ï
@dp.message_handler(lambda message: message.text == ans_62)
async def no1(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text=ans_91)
    keyboard.add(button_1)
    button_2 = types.KeyboardButton(text=ans_92)
    keyboard.add(button_2)
    button_3 = types.KeyboardButton(text=ans_back)
    keyboard.add(button_3)
    await message.answer(ans_9, reply_markup=keyboard)
#–∑–∞–π–¥–µ–º –≤ –≤–µ—Ç–≤—å –¥–∞
@dp.message_handler(lambda message: message.text == ans_91)
async def no1_yes(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_3 = types.KeyboardButton(text=ans_back)
    keyboard.add(button_3)
    await message.answer(ans_TRL5, reply_markup=keyboard)

#–ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤–µ—Ç–≤–ª–µ–Ω–∏–µ —Å —Ç—Ä–µ–º—è –ø—É–Ω–∫—Ç–∞–º–∏
@dp.message_handler(lambda message: message.text == ans_92)
async def no2(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text=ans_101)
    keyboard.add(button_1)
    button_2 = types.KeyboardButton(text=ans_102)
    keyboard.add(button_2)
    button_3 = types.KeyboardButton(text=ans_103)
    keyboard.add(button_3)
    button_4 = types.KeyboardButton(text=ans_back)
    keyboard.add(button_4)
    await message.answer(ans_10, reply_markup=keyboard)
    
@dp.message_handler(lambda message: message.text == ans_101)
async def last_one(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_4 = types.KeyboardButton(text=ans_back)
    keyboard.add(button_4)
    await message.answer(ans_TRL4, reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == ans_102)
async def last_two(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_4 = types.KeyboardButton(text=ans_back)
    keyboard.add(button_4)
    await message.answer(ans_TRL3, reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == ans_103)
async def last_three(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_4 = types.KeyboardButton(text=ans_back)
    keyboard.add(button_4)
    await message.answer(ans_TRL12, reply_markup=keyboard)



########################## –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
@dp.message_handler(lambda message: message.text == (ans_back))
async def main_again(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text=ans_5)
    keyboard.add(button_1)
    button_2 = types.KeyboardButton(text=ans_2)
    keyboard.add(button_2)
    button_3 = types.KeyboardButton(text=ans_3)
    keyboard.add(button_3)
    button_4 = types.KeyboardButton(text=ans_4)
    keyboard.add(button_4)
    await message.answer( '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', reply_markup=keyboard)


@dp.message_handler(content_types=['text'])
async def back2main(message : types.Message):
    if message.text not in ans:
        await bot.send_message(message.from_user.id, """–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è —è –Ω–µ –∑–Ω–∞—é, —á—Ç–æ —ç—Ç–æ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç.–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, """+message.from_user.full_name+""",–≤–≤–µ–¥–∏—Ç–µ /start, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã""")
@dp.message_handler(content_types=['sticker'])
async def feedback2sticker(message : types.Message):
    await bot.send_message(message.from_user.id,random.choice(ans_stickers))

if __name__ == '__main__':
    executor.start_polling(dp) #–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ä–∞–±–æ—Ç—É



